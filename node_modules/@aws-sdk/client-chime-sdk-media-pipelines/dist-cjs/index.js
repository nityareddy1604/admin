"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  ActiveSpeakerPosition: () => ActiveSpeakerPosition,
  ArtifactsConcatenationState: () => ArtifactsConcatenationState,
  ArtifactsState: () => ArtifactsState,
  AudioArtifactsConcatenationState: () => AudioArtifactsConcatenationState,
  AudioChannelsOption: () => AudioChannelsOption,
  AudioMuxType: () => AudioMuxType,
  BadRequestException: () => BadRequestException,
  BorderColor: () => BorderColor,
  CallAnalyticsLanguageCode: () => CallAnalyticsLanguageCode,
  CanvasOrientation: () => CanvasOrientation,
  ChimeSDKMediaPipelines: () => ChimeSDKMediaPipelines,
  ChimeSDKMediaPipelinesClient: () => ChimeSDKMediaPipelinesClient,
  ChimeSDKMediaPipelinesServiceException: () => ChimeSDKMediaPipelinesServiceException,
  ChimeSdkMeetingConfigurationFilterSensitiveLog: () => ChimeSdkMeetingConfigurationFilterSensitiveLog,
  ChimeSdkMeetingLiveConnectorConfigurationFilterSensitiveLog: () => ChimeSdkMeetingLiveConnectorConfigurationFilterSensitiveLog,
  ConcatenationSinkFilterSensitiveLog: () => ConcatenationSinkFilterSensitiveLog,
  ConcatenationSinkType: () => ConcatenationSinkType,
  ConcatenationSourceFilterSensitiveLog: () => ConcatenationSourceFilterSensitiveLog,
  ConcatenationSourceType: () => ConcatenationSourceType,
  ConflictException: () => ConflictException,
  ContentMuxType: () => ContentMuxType,
  ContentRedactionOutput: () => ContentRedactionOutput,
  ContentShareLayoutOption: () => ContentShareLayoutOption,
  ContentType: () => ContentType,
  CreateMediaCapturePipelineCommand: () => CreateMediaCapturePipelineCommand,
  CreateMediaCapturePipelineRequestFilterSensitiveLog: () => CreateMediaCapturePipelineRequestFilterSensitiveLog,
  CreateMediaCapturePipelineResponseFilterSensitiveLog: () => CreateMediaCapturePipelineResponseFilterSensitiveLog,
  CreateMediaConcatenationPipelineCommand: () => CreateMediaConcatenationPipelineCommand,
  CreateMediaConcatenationPipelineRequestFilterSensitiveLog: () => CreateMediaConcatenationPipelineRequestFilterSensitiveLog,
  CreateMediaConcatenationPipelineResponseFilterSensitiveLog: () => CreateMediaConcatenationPipelineResponseFilterSensitiveLog,
  CreateMediaInsightsPipelineCommand: () => CreateMediaInsightsPipelineCommand,
  CreateMediaInsightsPipelineConfigurationCommand: () => CreateMediaInsightsPipelineConfigurationCommand,
  CreateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog: () => CreateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog,
  CreateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog: () => CreateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog,
  CreateMediaInsightsPipelineRequestFilterSensitiveLog: () => CreateMediaInsightsPipelineRequestFilterSensitiveLog,
  CreateMediaInsightsPipelineResponseFilterSensitiveLog: () => CreateMediaInsightsPipelineResponseFilterSensitiveLog,
  CreateMediaLiveConnectorPipelineCommand: () => CreateMediaLiveConnectorPipelineCommand,
  CreateMediaLiveConnectorPipelineRequestFilterSensitiveLog: () => CreateMediaLiveConnectorPipelineRequestFilterSensitiveLog,
  CreateMediaLiveConnectorPipelineResponseFilterSensitiveLog: () => CreateMediaLiveConnectorPipelineResponseFilterSensitiveLog,
  CreateMediaPipelineKinesisVideoStreamPoolCommand: () => CreateMediaPipelineKinesisVideoStreamPoolCommand,
  CreateMediaPipelineKinesisVideoStreamPoolRequestFilterSensitiveLog: () => CreateMediaPipelineKinesisVideoStreamPoolRequestFilterSensitiveLog,
  CreateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog: () => CreateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog,
  CreateMediaStreamPipelineCommand: () => CreateMediaStreamPipelineCommand,
  CreateMediaStreamPipelineRequestFilterSensitiveLog: () => CreateMediaStreamPipelineRequestFilterSensitiveLog,
  CreateMediaStreamPipelineResponseFilterSensitiveLog: () => CreateMediaStreamPipelineResponseFilterSensitiveLog,
  DeleteMediaCapturePipelineCommand: () => DeleteMediaCapturePipelineCommand,
  DeleteMediaInsightsPipelineConfigurationCommand: () => DeleteMediaInsightsPipelineConfigurationCommand,
  DeleteMediaPipelineCommand: () => DeleteMediaPipelineCommand,
  DeleteMediaPipelineKinesisVideoStreamPoolCommand: () => DeleteMediaPipelineKinesisVideoStreamPoolCommand,
  ErrorCode: () => ErrorCode,
  ForbiddenException: () => ForbiddenException,
  FragmentSelectorType: () => FragmentSelectorType,
  GetMediaCapturePipelineCommand: () => GetMediaCapturePipelineCommand,
  GetMediaCapturePipelineResponseFilterSensitiveLog: () => GetMediaCapturePipelineResponseFilterSensitiveLog,
  GetMediaInsightsPipelineConfigurationCommand: () => GetMediaInsightsPipelineConfigurationCommand,
  GetMediaInsightsPipelineConfigurationResponseFilterSensitiveLog: () => GetMediaInsightsPipelineConfigurationResponseFilterSensitiveLog,
  GetMediaPipelineCommand: () => GetMediaPipelineCommand,
  GetMediaPipelineKinesisVideoStreamPoolCommand: () => GetMediaPipelineKinesisVideoStreamPoolCommand,
  GetMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog: () => GetMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog,
  GetMediaPipelineResponseFilterSensitiveLog: () => GetMediaPipelineResponseFilterSensitiveLog,
  GetSpeakerSearchTaskCommand: () => GetSpeakerSearchTaskCommand,
  GetVoiceToneAnalysisTaskCommand: () => GetVoiceToneAnalysisTaskCommand,
  HighlightColor: () => HighlightColor,
  HorizontalTilePosition: () => HorizontalTilePosition,
  KinesisDataStreamSinkConfigurationFilterSensitiveLog: () => KinesisDataStreamSinkConfigurationFilterSensitiveLog,
  KinesisVideoStreamPoolConfigurationFilterSensitiveLog: () => KinesisVideoStreamPoolConfigurationFilterSensitiveLog,
  KinesisVideoStreamPoolStatus: () => KinesisVideoStreamPoolStatus,
  KinesisVideoStreamPoolSummaryFilterSensitiveLog: () => KinesisVideoStreamPoolSummaryFilterSensitiveLog,
  LambdaFunctionSinkConfigurationFilterSensitiveLog: () => LambdaFunctionSinkConfigurationFilterSensitiveLog,
  LayoutOption: () => LayoutOption,
  ListMediaCapturePipelinesCommand: () => ListMediaCapturePipelinesCommand,
  ListMediaInsightsPipelineConfigurationsCommand: () => ListMediaInsightsPipelineConfigurationsCommand,
  ListMediaInsightsPipelineConfigurationsResponseFilterSensitiveLog: () => ListMediaInsightsPipelineConfigurationsResponseFilterSensitiveLog,
  ListMediaPipelineKinesisVideoStreamPoolsCommand: () => ListMediaPipelineKinesisVideoStreamPoolsCommand,
  ListMediaPipelineKinesisVideoStreamPoolsResponseFilterSensitiveLog: () => ListMediaPipelineKinesisVideoStreamPoolsResponseFilterSensitiveLog,
  ListMediaPipelinesCommand: () => ListMediaPipelinesCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  LiveConnectorMuxType: () => LiveConnectorMuxType,
  LiveConnectorRTMPConfigurationFilterSensitiveLog: () => LiveConnectorRTMPConfigurationFilterSensitiveLog,
  LiveConnectorSinkConfigurationFilterSensitiveLog: () => LiveConnectorSinkConfigurationFilterSensitiveLog,
  LiveConnectorSinkType: () => LiveConnectorSinkType,
  LiveConnectorSourceConfigurationFilterSensitiveLog: () => LiveConnectorSourceConfigurationFilterSensitiveLog,
  LiveConnectorSourceType: () => LiveConnectorSourceType,
  MediaCapturePipelineFilterSensitiveLog: () => MediaCapturePipelineFilterSensitiveLog,
  MediaCapturePipelineSourceConfigurationFilterSensitiveLog: () => MediaCapturePipelineSourceConfigurationFilterSensitiveLog,
  MediaConcatenationPipelineFilterSensitiveLog: () => MediaConcatenationPipelineFilterSensitiveLog,
  MediaEncoding: () => MediaEncoding,
  MediaInsightsPipelineConfigurationElementFilterSensitiveLog: () => MediaInsightsPipelineConfigurationElementFilterSensitiveLog,
  MediaInsightsPipelineConfigurationElementType: () => MediaInsightsPipelineConfigurationElementType,
  MediaInsightsPipelineConfigurationFilterSensitiveLog: () => MediaInsightsPipelineConfigurationFilterSensitiveLog,
  MediaInsightsPipelineConfigurationSummaryFilterSensitiveLog: () => MediaInsightsPipelineConfigurationSummaryFilterSensitiveLog,
  MediaInsightsPipelineFilterSensitiveLog: () => MediaInsightsPipelineFilterSensitiveLog,
  MediaLiveConnectorPipelineFilterSensitiveLog: () => MediaLiveConnectorPipelineFilterSensitiveLog,
  MediaPipelineElementStatus: () => MediaPipelineElementStatus,
  MediaPipelineFilterSensitiveLog: () => MediaPipelineFilterSensitiveLog,
  MediaPipelineSinkType: () => MediaPipelineSinkType,
  MediaPipelineSourceType: () => MediaPipelineSourceType,
  MediaPipelineStatus: () => MediaPipelineStatus,
  MediaPipelineStatusUpdate: () => MediaPipelineStatusUpdate,
  MediaPipelineTaskStatus: () => MediaPipelineTaskStatus,
  MediaStreamPipelineFilterSensitiveLog: () => MediaStreamPipelineFilterSensitiveLog,
  MediaStreamPipelineSinkType: () => MediaStreamPipelineSinkType,
  MediaStreamSinkFilterSensitiveLog: () => MediaStreamSinkFilterSensitiveLog,
  MediaStreamSourceFilterSensitiveLog: () => MediaStreamSourceFilterSensitiveLog,
  MediaStreamType: () => MediaStreamType,
  NotFoundException: () => NotFoundException,
  PartialResultsStability: () => PartialResultsStability,
  ParticipantRole: () => ParticipantRole,
  PresenterPosition: () => PresenterPosition,
  RealTimeAlertRuleType: () => RealTimeAlertRuleType,
  RecordingFileFormat: () => RecordingFileFormat,
  ResolutionOption: () => ResolutionOption,
  ResourceLimitExceededException: () => ResourceLimitExceededException,
  S3BucketSinkConfigurationFilterSensitiveLog: () => S3BucketSinkConfigurationFilterSensitiveLog,
  S3RecordingSinkConfigurationFilterSensitiveLog: () => S3RecordingSinkConfigurationFilterSensitiveLog,
  S3RecordingSinkRuntimeConfigurationFilterSensitiveLog: () => S3RecordingSinkRuntimeConfigurationFilterSensitiveLog,
  SelectedVideoStreamsFilterSensitiveLog: () => SelectedVideoStreamsFilterSensitiveLog,
  SentimentType: () => SentimentType,
  ServiceFailureException: () => ServiceFailureException,
  ServiceUnavailableException: () => ServiceUnavailableException,
  SnsTopicSinkConfigurationFilterSensitiveLog: () => SnsTopicSinkConfigurationFilterSensitiveLog,
  SourceConfigurationFilterSensitiveLog: () => SourceConfigurationFilterSensitiveLog,
  SqsQueueSinkConfigurationFilterSensitiveLog: () => SqsQueueSinkConfigurationFilterSensitiveLog,
  StartSpeakerSearchTaskCommand: () => StartSpeakerSearchTaskCommand,
  StartSpeakerSearchTaskRequestFilterSensitiveLog: () => StartSpeakerSearchTaskRequestFilterSensitiveLog,
  StartVoiceToneAnalysisTaskCommand: () => StartVoiceToneAnalysisTaskCommand,
  StartVoiceToneAnalysisTaskRequestFilterSensitiveLog: () => StartVoiceToneAnalysisTaskRequestFilterSensitiveLog,
  StopSpeakerSearchTaskCommand: () => StopSpeakerSearchTaskCommand,
  StopVoiceToneAnalysisTaskCommand: () => StopVoiceToneAnalysisTaskCommand,
  TagResourceCommand: () => TagResourceCommand,
  ThrottledClientException: () => ThrottledClientException,
  TileOrder: () => TileOrder,
  UnauthorizedClientException: () => UnauthorizedClientException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateMediaInsightsPipelineConfigurationCommand: () => UpdateMediaInsightsPipelineConfigurationCommand,
  UpdateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog: () => UpdateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog,
  UpdateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog: () => UpdateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog,
  UpdateMediaInsightsPipelineStatusCommand: () => UpdateMediaInsightsPipelineStatusCommand,
  UpdateMediaPipelineKinesisVideoStreamPoolCommand: () => UpdateMediaPipelineKinesisVideoStreamPoolCommand,
  UpdateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog: () => UpdateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog,
  VerticalTilePosition: () => VerticalTilePosition,
  VideoMuxType: () => VideoMuxType,
  VocabularyFilterMethod: () => VocabularyFilterMethod,
  VoiceAnalyticsConfigurationStatus: () => VoiceAnalyticsConfigurationStatus,
  VoiceAnalyticsLanguageCode: () => VoiceAnalyticsLanguageCode,
  __Client: () => import_smithy_client.Client,
  paginateListMediaCapturePipelines: () => paginateListMediaCapturePipelines,
  paginateListMediaInsightsPipelineConfigurations: () => paginateListMediaInsightsPipelineConfigurations,
  paginateListMediaPipelineKinesisVideoStreamPools: () => paginateListMediaPipelineKinesisVideoStreamPools,
  paginateListMediaPipelines: () => paginateListMediaPipelines
});
module.exports = __toCommonJS(index_exports);

// src/ChimeSDKMediaPipelinesClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "chime"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/ChimeSDKMediaPipelinesClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/ChimeSDKMediaPipelinesClient.ts
var ChimeSDKMediaPipelinesClient = class extends import_smithy_client.Client {
  static {
    __name(this, "ChimeSDKMediaPipelinesClient");
  }
  /**
   * The resolved configuration of ChimeSDKMediaPipelinesClient class. This is resolved and normalized from the {@link ChimeSDKMediaPipelinesClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultChimeSDKMediaPipelinesHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/ChimeSDKMediaPipelines.ts


// src/commands/CreateMediaCapturePipelineCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/models/models_0.ts


// src/models/ChimeSDKMediaPipelinesServiceException.ts

var ChimeSDKMediaPipelinesServiceException = class _ChimeSDKMediaPipelinesServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "ChimeSDKMediaPipelinesServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _ChimeSDKMediaPipelinesServiceException.prototype);
  }
};

// src/models/models_0.ts
var ActiveSpeakerPosition = {
  BottomLeft: "BottomLeft",
  BottomRight: "BottomRight",
  TopLeft: "TopLeft",
  TopRight: "TopRight"
};
var ContentType = {
  PII: "PII"
};
var CallAnalyticsLanguageCode = {
  DE_DE: "de-DE",
  EN_AU: "en-AU",
  EN_GB: "en-GB",
  EN_US: "en-US",
  ES_US: "es-US",
  FR_CA: "fr-CA",
  FR_FR: "fr-FR",
  IT_IT: "it-IT",
  PT_BR: "pt-BR"
};
var PartialResultsStability = {
  HIGH: "high",
  LOW: "low",
  MEDIUM: "medium"
};
var ContentRedactionOutput = {
  REDACTED: "redacted",
  REDACTED_AND_UNREDACTED: "redacted_and_unredacted"
};
var VocabularyFilterMethod = {
  MASK: "mask",
  REMOVE: "remove",
  TAG: "tag"
};
var AudioArtifactsConcatenationState = {
  Enabled: "Enabled"
};
var ArtifactsConcatenationState = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var AudioMuxType = {
  AudioOnly: "AudioOnly",
  AudioWithActiveSpeakerVideo: "AudioWithActiveSpeakerVideo",
  AudioWithCompositedVideo: "AudioWithCompositedVideo"
};
var CanvasOrientation = {
  Landscape: "Landscape",
  Portrait: "Portrait"
};
var ContentShareLayoutOption = {
  ActiveSpeakerOnly: "ActiveSpeakerOnly",
  Horizontal: "Horizontal",
  PresenterOnly: "PresenterOnly",
  Vertical: "Vertical"
};
var TileOrder = {
  JoinSequence: "JoinSequence",
  SpeakerSequence: "SpeakerSequence"
};
var HorizontalTilePosition = {
  Bottom: "Bottom",
  Top: "Top"
};
var PresenterPosition = {
  BottomLeft: "BottomLeft",
  BottomRight: "BottomRight",
  TopLeft: "TopLeft",
  TopRight: "TopRight"
};
var VerticalTilePosition = {
  Left: "Left",
  Right: "Right"
};
var BorderColor = {
  Black: "Black",
  Blue: "Blue",
  Green: "Green",
  Red: "Red",
  White: "White",
  Yellow: "Yellow"
};
var HighlightColor = {
  Black: "Black",
  Blue: "Blue",
  Green: "Green",
  Red: "Red",
  White: "White",
  Yellow: "Yellow"
};
var LayoutOption = {
  GridView: "GridView"
};
var ResolutionOption = {
  FHD: "FHD",
  HD: "HD"
};
var ContentMuxType = {
  ContentOnly: "ContentOnly"
};
var ArtifactsState = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var VideoMuxType = {
  VideoOnly: "VideoOnly"
};
var AudioChannelsOption = {
  Mono: "Mono",
  Stereo: "Stereo"
};
var ErrorCode = {
  BadRequest: "BadRequest",
  Forbidden: "Forbidden",
  NotFound: "NotFound",
  ResourceLimitExceeded: "ResourceLimitExceeded",
  ServiceFailure: "ServiceFailure",
  ServiceUnavailable: "ServiceUnavailable",
  Throttling: "Throttling"
};
var BadRequestException = class _BadRequestException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "BadRequestException");
  }
  name = "BadRequestException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BadRequestException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _BadRequestException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ParticipantRole = {
  AGENT: "AGENT",
  CUSTOMER: "CUSTOMER"
};
var MediaPipelineSinkType = {
  S3Bucket: "S3Bucket"
};
var MediaPipelineSourceType = {
  ChimeSdkMeeting: "ChimeSdkMeeting"
};
var MediaPipelineStatus = {
  Failed: "Failed",
  InProgress: "InProgress",
  Initializing: "Initializing",
  NotStarted: "NotStarted",
  Paused: "Paused",
  Stopped: "Stopped",
  Stopping: "Stopping"
};
var ForbiddenException = class _ForbiddenException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "ForbiddenException");
  }
  name = "ForbiddenException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request id associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ForbiddenException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ForbiddenException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ResourceLimitExceededException = class _ResourceLimitExceededException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "ResourceLimitExceededException");
  }
  name = "ResourceLimitExceededException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceLimitExceededException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ServiceFailureException = class _ServiceFailureException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "ServiceFailureException");
  }
  name = "ServiceFailureException";
  $fault = "server";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceFailureException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceFailureException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ServiceUnavailableException = class _ServiceUnavailableException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "ServiceUnavailableException");
  }
  name = "ServiceUnavailableException";
  $fault = "server";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ThrottledClientException = class _ThrottledClientException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "ThrottledClientException");
  }
  name = "ThrottledClientException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottledClientException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottledClientException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var UnauthorizedClientException = class _UnauthorizedClientException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "UnauthorizedClientException");
  }
  name = "UnauthorizedClientException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "UnauthorizedClientException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _UnauthorizedClientException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var ConcatenationSinkType = {
  S3Bucket: "S3Bucket"
};
var ConcatenationSourceType = {
  MediaCapturePipeline: "MediaCapturePipeline"
};
var FragmentSelectorType = {
  ProducerTimestamp: "ProducerTimestamp",
  ServerTimestamp: "ServerTimestamp"
};
var MediaEncoding = {
  PCM: "pcm"
};
var RecordingFileFormat = {
  Opus: "Opus",
  Wav: "Wav"
};
var MediaPipelineElementStatus = {
  Failed: "Failed",
  InProgress: "InProgress",
  Initializing: "Initializing",
  NotStarted: "NotStarted",
  NotSupported: "NotSupported",
  Paused: "Paused",
  Stopped: "Stopped",
  Stopping: "Stopping"
};
var MediaInsightsPipelineConfigurationElementType = {
  AMAZON_TRANSCRIBE_CALL_ANALYTICS_PROCESSOR: "AmazonTranscribeCallAnalyticsProcessor",
  AMAZON_TRANSCRIBE_PROCESSOR: "AmazonTranscribeProcessor",
  KINESIS_DATA_STREAM_SINK: "KinesisDataStreamSink",
  LAMBDA_FUNCTION_SINK: "LambdaFunctionSink",
  S3_RECORDING_SINK: "S3RecordingSink",
  SNS_TOPIC_SINK: "SnsTopicSink",
  SQS_QUEUE_SINK: "SqsQueueSink",
  VOICE_ANALYTICS_PROCESSOR: "VoiceAnalyticsProcessor",
  VOICE_ENHANCEMENT_SINK: "VoiceEnhancementSink"
};
var NotFoundException = class _NotFoundException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "NotFoundException");
  }
  name = "NotFoundException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "NotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _NotFoundException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var VoiceAnalyticsConfigurationStatus = {
  DISABLED: "Disabled",
  ENABLED: "Enabled"
};
var SentimentType = {
  NEGATIVE: "NEGATIVE"
};
var RealTimeAlertRuleType = {
  IssueDetection: "IssueDetection",
  KeywordMatch: "KeywordMatch",
  Sentiment: "Sentiment"
};
var LiveConnectorSinkType = {
  RTMP: "RTMP"
};
var LiveConnectorMuxType = {
  AudioWithActiveSpeakerVideo: "AudioWithActiveSpeakerVideo",
  AudioWithCompositedVideo: "AudioWithCompositedVideo"
};
var LiveConnectorSourceType = {
  ChimeSdkMeeting: "ChimeSdkMeeting"
};
var ConflictException = class _ConflictException extends ChimeSDKMediaPipelinesServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  Code;
  Message;
  /**
   * <p>The request ID associated with the call responsible for the exception.</p>
   * @public
   */
  RequestId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Code = opts.Code;
    this.Message = opts.Message;
    this.RequestId = opts.RequestId;
  }
};
var KinesisVideoStreamPoolStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var MediaStreamType = {
  IndividualAudio: "IndividualAudio",
  MixedAudio: "MixedAudio"
};
var MediaStreamPipelineSinkType = {
  KinesisVideoStreamPool: "KinesisVideoStreamPool"
};
var MediaPipelineTaskStatus = {
  Failed: "Failed",
  InProgress: "InProgress",
  Initializing: "Initializing",
  NotStarted: "NotStarted",
  Stopped: "Stopped",
  Stopping: "Stopping"
};
var VoiceAnalyticsLanguageCode = {
  EN_US: "en-US"
};
var MediaPipelineStatusUpdate = {
  Pause: "Pause",
  Resume: "Resume"
};
var SelectedVideoStreamsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ExternalUserIds && { ExternalUserIds: import_smithy_client.SENSITIVE_STRING }
}), "SelectedVideoStreamsFilterSensitiveLog");
var SourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SelectedVideoStreams && {
    SelectedVideoStreams: SelectedVideoStreamsFilterSensitiveLog(obj.SelectedVideoStreams)
  }
}), "SourceConfigurationFilterSensitiveLog");
var ChimeSdkMeetingConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SourceConfiguration && {
    SourceConfiguration: SourceConfigurationFilterSensitiveLog(obj.SourceConfiguration)
  }
}), "ChimeSdkMeetingConfigurationFilterSensitiveLog");
var CreateMediaCapturePipelineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SourceArn && { SourceArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.SinkArn && { SinkArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING },
  ...obj.ChimeSdkMeetingConfiguration && {
    ChimeSdkMeetingConfiguration: ChimeSdkMeetingConfigurationFilterSensitiveLog(obj.ChimeSdkMeetingConfiguration)
  },
  ...obj.SinkIamRoleArn && { SinkIamRoleArn: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaCapturePipelineRequestFilterSensitiveLog");
var MediaCapturePipelineFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SourceArn && { SourceArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.SinkArn && { SinkArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.ChimeSdkMeetingConfiguration && {
    ChimeSdkMeetingConfiguration: ChimeSdkMeetingConfigurationFilterSensitiveLog(obj.ChimeSdkMeetingConfiguration)
  },
  ...obj.SinkIamRoleArn && { SinkIamRoleArn: import_smithy_client.SENSITIVE_STRING }
}), "MediaCapturePipelineFilterSensitiveLog");
var CreateMediaCapturePipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaCapturePipeline && {
    MediaCapturePipeline: MediaCapturePipelineFilterSensitiveLog(obj.MediaCapturePipeline)
  }
}), "CreateMediaCapturePipelineResponseFilterSensitiveLog");
var S3BucketSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Destination && { Destination: import_smithy_client.SENSITIVE_STRING }
}), "S3BucketSinkConfigurationFilterSensitiveLog");
var ConcatenationSinkFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.S3BucketSinkConfiguration && {
    S3BucketSinkConfiguration: S3BucketSinkConfigurationFilterSensitiveLog(obj.S3BucketSinkConfiguration)
  }
}), "ConcatenationSinkFilterSensitiveLog");
var MediaCapturePipelineSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaPipelineArn && { MediaPipelineArn: import_smithy_client.SENSITIVE_STRING }
}), "MediaCapturePipelineSourceConfigurationFilterSensitiveLog");
var ConcatenationSourceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaCapturePipelineSourceConfiguration && {
    MediaCapturePipelineSourceConfiguration: MediaCapturePipelineSourceConfigurationFilterSensitiveLog(
      obj.MediaCapturePipelineSourceConfiguration
    )
  }
}), "ConcatenationSourceFilterSensitiveLog");
var CreateMediaConcatenationPipelineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => ConcatenationSourceFilterSensitiveLog(item)) },
  ...obj.Sinks && { Sinks: obj.Sinks.map((item) => ConcatenationSinkFilterSensitiveLog(item)) },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaConcatenationPipelineRequestFilterSensitiveLog");
var MediaConcatenationPipelineFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => ConcatenationSourceFilterSensitiveLog(item)) },
  ...obj.Sinks && { Sinks: obj.Sinks.map((item) => ConcatenationSinkFilterSensitiveLog(item)) }
}), "MediaConcatenationPipelineFilterSensitiveLog");
var CreateMediaConcatenationPipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaConcatenationPipeline && {
    MediaConcatenationPipeline: MediaConcatenationPipelineFilterSensitiveLog(obj.MediaConcatenationPipeline)
  }
}), "CreateMediaConcatenationPipelineResponseFilterSensitiveLog");
var S3RecordingSinkRuntimeConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Destination && { Destination: import_smithy_client.SENSITIVE_STRING }
}), "S3RecordingSinkRuntimeConfigurationFilterSensitiveLog");
var CreateMediaInsightsPipelineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfigurationArn && { MediaInsightsPipelineConfigurationArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.MediaInsightsRuntimeMetadata && { MediaInsightsRuntimeMetadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.S3RecordingSinkRuntimeConfiguration && {
    S3RecordingSinkRuntimeConfiguration: S3RecordingSinkRuntimeConfigurationFilterSensitiveLog(
      obj.S3RecordingSinkRuntimeConfiguration
    )
  },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaInsightsPipelineRequestFilterSensitiveLog");
var MediaInsightsPipelineFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaPipelineArn && { MediaPipelineArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.MediaInsightsPipelineConfigurationArn && { MediaInsightsPipelineConfigurationArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.MediaInsightsRuntimeMetadata && { MediaInsightsRuntimeMetadata: import_smithy_client.SENSITIVE_STRING },
  ...obj.S3RecordingSinkRuntimeConfiguration && {
    S3RecordingSinkRuntimeConfiguration: S3RecordingSinkRuntimeConfigurationFilterSensitiveLog(
      obj.S3RecordingSinkRuntimeConfiguration
    )
  }
}), "MediaInsightsPipelineFilterSensitiveLog");
var CreateMediaInsightsPipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipeline && {
    MediaInsightsPipeline: MediaInsightsPipelineFilterSensitiveLog(obj.MediaInsightsPipeline)
  }
}), "CreateMediaInsightsPipelineResponseFilterSensitiveLog");
var KinesisDataStreamSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InsightsTarget && { InsightsTarget: import_smithy_client.SENSITIVE_STRING }
}), "KinesisDataStreamSinkConfigurationFilterSensitiveLog");
var LambdaFunctionSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InsightsTarget && { InsightsTarget: import_smithy_client.SENSITIVE_STRING }
}), "LambdaFunctionSinkConfigurationFilterSensitiveLog");
var S3RecordingSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Destination && { Destination: import_smithy_client.SENSITIVE_STRING }
}), "S3RecordingSinkConfigurationFilterSensitiveLog");
var SnsTopicSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InsightsTarget && { InsightsTarget: import_smithy_client.SENSITIVE_STRING }
}), "SnsTopicSinkConfigurationFilterSensitiveLog");
var SqsQueueSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.InsightsTarget && { InsightsTarget: import_smithy_client.SENSITIVE_STRING }
}), "SqsQueueSinkConfigurationFilterSensitiveLog");
var MediaInsightsPipelineConfigurationElementFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.KinesisDataStreamSinkConfiguration && {
    KinesisDataStreamSinkConfiguration: KinesisDataStreamSinkConfigurationFilterSensitiveLog(
      obj.KinesisDataStreamSinkConfiguration
    )
  },
  ...obj.S3RecordingSinkConfiguration && {
    S3RecordingSinkConfiguration: S3RecordingSinkConfigurationFilterSensitiveLog(obj.S3RecordingSinkConfiguration)
  },
  ...obj.LambdaFunctionSinkConfiguration && {
    LambdaFunctionSinkConfiguration: LambdaFunctionSinkConfigurationFilterSensitiveLog(
      obj.LambdaFunctionSinkConfiguration
    )
  },
  ...obj.SqsQueueSinkConfiguration && {
    SqsQueueSinkConfiguration: SqsQueueSinkConfigurationFilterSensitiveLog(obj.SqsQueueSinkConfiguration)
  },
  ...obj.SnsTopicSinkConfiguration && {
    SnsTopicSinkConfiguration: SnsTopicSinkConfigurationFilterSensitiveLog(obj.SnsTopicSinkConfiguration)
  }
}), "MediaInsightsPipelineConfigurationElementFilterSensitiveLog");
var CreateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ResourceAccessRoleArn && { ResourceAccessRoleArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.Elements && {
    Elements: obj.Elements.map((item) => MediaInsightsPipelineConfigurationElementFilterSensitiveLog(item))
  },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog");
var MediaInsightsPipelineConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfigurationArn && { MediaInsightsPipelineConfigurationArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.ResourceAccessRoleArn && { ResourceAccessRoleArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.Elements && {
    Elements: obj.Elements.map((item) => MediaInsightsPipelineConfigurationElementFilterSensitiveLog(item))
  }
}), "MediaInsightsPipelineConfigurationFilterSensitiveLog");
var CreateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfiguration && {
    MediaInsightsPipelineConfiguration: MediaInsightsPipelineConfigurationFilterSensitiveLog(
      obj.MediaInsightsPipelineConfiguration
    )
  }
}), "CreateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog");
var LiveConnectorRTMPConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Url && { Url: import_smithy_client.SENSITIVE_STRING }
}), "LiveConnectorRTMPConfigurationFilterSensitiveLog");
var LiveConnectorSinkConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.RTMPConfiguration && {
    RTMPConfiguration: LiveConnectorRTMPConfigurationFilterSensitiveLog(obj.RTMPConfiguration)
  }
}), "LiveConnectorSinkConfigurationFilterSensitiveLog");
var ChimeSdkMeetingLiveConnectorConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Arn && { Arn: import_smithy_client.SENSITIVE_STRING },
  ...obj.SourceConfiguration && {
    SourceConfiguration: SourceConfigurationFilterSensitiveLog(obj.SourceConfiguration)
  }
}), "ChimeSdkMeetingLiveConnectorConfigurationFilterSensitiveLog");
var LiveConnectorSourceConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ChimeSdkMeetingLiveConnectorConfiguration && {
    ChimeSdkMeetingLiveConnectorConfiguration: ChimeSdkMeetingLiveConnectorConfigurationFilterSensitiveLog(
      obj.ChimeSdkMeetingLiveConnectorConfiguration
    )
  }
}), "LiveConnectorSourceConfigurationFilterSensitiveLog");
var CreateMediaLiveConnectorPipelineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => LiveConnectorSourceConfigurationFilterSensitiveLog(item)) },
  ...obj.Sinks && { Sinks: obj.Sinks.map((item) => LiveConnectorSinkConfigurationFilterSensitiveLog(item)) },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaLiveConnectorPipelineRequestFilterSensitiveLog");
var MediaLiveConnectorPipelineFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => LiveConnectorSourceConfigurationFilterSensitiveLog(item)) },
  ...obj.Sinks && { Sinks: obj.Sinks.map((item) => LiveConnectorSinkConfigurationFilterSensitiveLog(item)) }
}), "MediaLiveConnectorPipelineFilterSensitiveLog");
var CreateMediaLiveConnectorPipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaLiveConnectorPipeline && {
    MediaLiveConnectorPipeline: MediaLiveConnectorPipelineFilterSensitiveLog(obj.MediaLiveConnectorPipeline)
  }
}), "CreateMediaLiveConnectorPipelineResponseFilterSensitiveLog");
var CreateMediaPipelineKinesisVideoStreamPoolRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaPipelineKinesisVideoStreamPoolRequestFilterSensitiveLog");
var KinesisVideoStreamPoolConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.PoolArn && { PoolArn: import_smithy_client.SENSITIVE_STRING }
}), "KinesisVideoStreamPoolConfigurationFilterSensitiveLog");
var CreateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.KinesisVideoStreamPoolConfiguration && {
    KinesisVideoStreamPoolConfiguration: KinesisVideoStreamPoolConfigurationFilterSensitiveLog(
      obj.KinesisVideoStreamPoolConfiguration
    )
  }
}), "CreateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog");
var MediaStreamSinkFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SinkArn && { SinkArn: import_smithy_client.SENSITIVE_STRING }
}), "MediaStreamSinkFilterSensitiveLog");
var MediaStreamSourceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.SourceArn && { SourceArn: import_smithy_client.SENSITIVE_STRING }
}), "MediaStreamSourceFilterSensitiveLog");
var CreateMediaStreamPipelineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => MediaStreamSourceFilterSensitiveLog(item)) },
  ...obj.Sinks && { Sinks: obj.Sinks.map((item) => MediaStreamSinkFilterSensitiveLog(item)) },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "CreateMediaStreamPipelineRequestFilterSensitiveLog");
var MediaStreamPipelineFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Sources && { Sources: obj.Sources.map((item) => MediaStreamSourceFilterSensitiveLog(item)) },
  ...obj.Sinks && { Sinks: obj.Sinks.map((item) => MediaStreamSinkFilterSensitiveLog(item)) }
}), "MediaStreamPipelineFilterSensitiveLog");
var CreateMediaStreamPipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaStreamPipeline && {
    MediaStreamPipeline: MediaStreamPipelineFilterSensitiveLog(obj.MediaStreamPipeline)
  }
}), "CreateMediaStreamPipelineResponseFilterSensitiveLog");
var GetMediaCapturePipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaCapturePipeline && {
    MediaCapturePipeline: MediaCapturePipelineFilterSensitiveLog(obj.MediaCapturePipeline)
  }
}), "GetMediaCapturePipelineResponseFilterSensitiveLog");
var GetMediaInsightsPipelineConfigurationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfiguration && {
    MediaInsightsPipelineConfiguration: MediaInsightsPipelineConfigurationFilterSensitiveLog(
      obj.MediaInsightsPipelineConfiguration
    )
  }
}), "GetMediaInsightsPipelineConfigurationResponseFilterSensitiveLog");
var MediaPipelineFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaCapturePipeline && {
    MediaCapturePipeline: MediaCapturePipelineFilterSensitiveLog(obj.MediaCapturePipeline)
  },
  ...obj.MediaLiveConnectorPipeline && {
    MediaLiveConnectorPipeline: MediaLiveConnectorPipelineFilterSensitiveLog(obj.MediaLiveConnectorPipeline)
  },
  ...obj.MediaConcatenationPipeline && {
    MediaConcatenationPipeline: MediaConcatenationPipelineFilterSensitiveLog(obj.MediaConcatenationPipeline)
  },
  ...obj.MediaInsightsPipeline && {
    MediaInsightsPipeline: MediaInsightsPipelineFilterSensitiveLog(obj.MediaInsightsPipeline)
  },
  ...obj.MediaStreamPipeline && {
    MediaStreamPipeline: MediaStreamPipelineFilterSensitiveLog(obj.MediaStreamPipeline)
  }
}), "MediaPipelineFilterSensitiveLog");
var GetMediaPipelineResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaPipeline && { MediaPipeline: MediaPipelineFilterSensitiveLog(obj.MediaPipeline) }
}), "GetMediaPipelineResponseFilterSensitiveLog");
var GetMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.KinesisVideoStreamPoolConfiguration && {
    KinesisVideoStreamPoolConfiguration: KinesisVideoStreamPoolConfigurationFilterSensitiveLog(
      obj.KinesisVideoStreamPoolConfiguration
    )
  }
}), "GetMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog");
var MediaInsightsPipelineConfigurationSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfigurationArn && { MediaInsightsPipelineConfigurationArn: import_smithy_client.SENSITIVE_STRING }
}), "MediaInsightsPipelineConfigurationSummaryFilterSensitiveLog");
var ListMediaInsightsPipelineConfigurationsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfigurations && {
    MediaInsightsPipelineConfigurations: obj.MediaInsightsPipelineConfigurations.map(
      (item) => MediaInsightsPipelineConfigurationSummaryFilterSensitiveLog(item)
    )
  }
}), "ListMediaInsightsPipelineConfigurationsResponseFilterSensitiveLog");
var KinesisVideoStreamPoolSummaryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.PoolArn && { PoolArn: import_smithy_client.SENSITIVE_STRING }
}), "KinesisVideoStreamPoolSummaryFilterSensitiveLog");
var ListMediaPipelineKinesisVideoStreamPoolsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.KinesisVideoStreamPools && {
    KinesisVideoStreamPools: obj.KinesisVideoStreamPools.map(
      (item) => KinesisVideoStreamPoolSummaryFilterSensitiveLog(item)
    )
  }
}), "ListMediaPipelineKinesisVideoStreamPoolsResponseFilterSensitiveLog");
var StartSpeakerSearchTaskRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.VoiceProfileDomainArn && { VoiceProfileDomainArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "StartSpeakerSearchTaskRequestFilterSensitiveLog");
var StartVoiceToneAnalysisTaskRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ClientRequestToken && { ClientRequestToken: import_smithy_client.SENSITIVE_STRING }
}), "StartVoiceToneAnalysisTaskRequestFilterSensitiveLog");
var UpdateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.ResourceAccessRoleArn && { ResourceAccessRoleArn: import_smithy_client.SENSITIVE_STRING },
  ...obj.Elements && {
    Elements: obj.Elements.map((item) => MediaInsightsPipelineConfigurationElementFilterSensitiveLog(item))
  }
}), "UpdateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog");
var UpdateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.MediaInsightsPipelineConfiguration && {
    MediaInsightsPipelineConfiguration: MediaInsightsPipelineConfigurationFilterSensitiveLog(
      obj.MediaInsightsPipelineConfiguration
    )
  }
}), "UpdateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog");
var UpdateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.KinesisVideoStreamPoolConfiguration && {
    KinesisVideoStreamPoolConfiguration: KinesisVideoStreamPoolConfigurationFilterSensitiveLog(
      obj.KinesisVideoStreamPoolConfiguration
    )
  }
}), "UpdateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");
var se_CreateMediaCapturePipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/sdk-media-capture-pipelines");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ChimeSdkMeetingConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ChimeSdkMeetingConfiguration"),
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      SinkArn: [],
      SinkIamRoleArn: [],
      SinkType: [],
      SourceArn: [],
      SourceType: [],
      SseAwsKeyManagementParams: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SseAwsKeyManagementParams"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaCapturePipelineCommand");
var se_CreateMediaConcatenationPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/sdk-media-concatenation-pipelines");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Sinks: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Sinks"),
      Sources: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Sources"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaConcatenationPipelineCommand");
var se_CreateMediaInsightsPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-insights-pipelines");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      KinesisVideoStreamRecordingSourceRuntimeConfiguration: /* @__PURE__ */ __name((_) => se_KinesisVideoStreamRecordingSourceRuntimeConfiguration(_, context), "KinesisVideoStreamRecordingSourceRuntimeConfiguration"),
      KinesisVideoStreamSourceRuntimeConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "KinesisVideoStreamSourceRuntimeConfiguration"),
      MediaInsightsPipelineConfigurationArn: [],
      MediaInsightsRuntimeMetadata: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "MediaInsightsRuntimeMetadata"),
      S3RecordingSinkRuntimeConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "S3RecordingSinkRuntimeConfiguration"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaInsightsPipelineCommand");
var se_CreateMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-insights-pipeline-configurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Elements: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Elements"),
      MediaInsightsPipelineConfigurationName: [],
      RealTimeAlertConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "RealTimeAlertConfiguration"),
      ResourceAccessRoleArn: [],
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaInsightsPipelineConfigurationCommand");
var se_CreateMediaLiveConnectorPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/sdk-media-live-connector-pipelines");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Sinks: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Sinks"),
      Sources: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Sources"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaLiveConnectorPipelineCommand");
var se_CreateMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-pipeline-kinesis-video-stream-pools");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      PoolName: [],
      StreamConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "StreamConfiguration"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaPipelineKinesisVideoStreamPoolCommand");
var se_CreateMediaStreamPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/sdk-media-stream-pipelines");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      Sinks: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Sinks"),
      Sources: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Sources"),
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateMediaStreamPipelineCommand");
var se_DeleteMediaCapturePipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdk-media-capture-pipelines/{MediaPipelineId}");
  b.p("MediaPipelineId", () => input.MediaPipelineId, "{MediaPipelineId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMediaCapturePipelineCommand");
var se_DeleteMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipeline-configurations/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMediaInsightsPipelineConfigurationCommand");
var se_DeleteMediaPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdk-media-pipelines/{MediaPipelineId}");
  b.p("MediaPipelineId", () => input.MediaPipelineId, "{MediaPipelineId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMediaPipelineCommand");
var se_DeleteMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-pipeline-kinesis-video-stream-pools/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteMediaPipelineKinesisVideoStreamPoolCommand");
var se_GetMediaCapturePipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdk-media-capture-pipelines/{MediaPipelineId}");
  b.p("MediaPipelineId", () => input.MediaPipelineId, "{MediaPipelineId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMediaCapturePipelineCommand");
var se_GetMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipeline-configurations/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMediaInsightsPipelineConfigurationCommand");
var se_GetMediaPipelineCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdk-media-pipelines/{MediaPipelineId}");
  b.p("MediaPipelineId", () => input.MediaPipelineId, "{MediaPipelineId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMediaPipelineCommand");
var se_GetMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-pipeline-kinesis-video-stream-pools/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMediaPipelineKinesisVideoStreamPoolCommand");
var se_GetSpeakerSearchTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipelines/{Identifier}/speaker-search-tasks/{SpeakerSearchTaskId}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  b.p("SpeakerSearchTaskId", () => input.SpeakerSearchTaskId, "{SpeakerSearchTaskId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetSpeakerSearchTaskCommand");
var se_GetVoiceToneAnalysisTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  b.p("VoiceToneAnalysisTaskId", () => input.VoiceToneAnalysisTaskId, "{VoiceToneAnalysisTaskId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetVoiceToneAnalysisTaskCommand");
var se_ListMediaCapturePipelinesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdk-media-capture-pipelines");
  const query = (0, import_smithy_client.map)({
    [_nt]: [, input[_NT]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListMediaCapturePipelinesCommand");
var se_ListMediaInsightsPipelineConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipeline-configurations");
  const query = (0, import_smithy_client.map)({
    [_nt]: [, input[_NT]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListMediaInsightsPipelineConfigurationsCommand");
var se_ListMediaPipelineKinesisVideoStreamPoolsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-pipeline-kinesis-video-stream-pools");
  const query = (0, import_smithy_client.map)({
    [_nt]: [, input[_NT]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListMediaPipelineKinesisVideoStreamPoolsCommand");
var se_ListMediaPipelinesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/sdk-media-pipelines");
  const query = (0, import_smithy_client.map)({
    [_nt]: [, input[_NT]],
    [_mr]: [() => input.MaxResults !== void 0, () => input[_MR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListMediaPipelinesCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_a]: [, (0, import_smithy_client.expectNonNull)(input[_RARN], `ResourceARN`)]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_StartSpeakerSearchTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-insights-pipelines/{Identifier}/speaker-search-tasks");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "start"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      KinesisVideoStreamSourceTaskConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "KinesisVideoStreamSourceTaskConfiguration"),
      VoiceProfileDomainArn: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_StartSpeakerSearchTaskCommand");
var se_StartVoiceToneAnalysisTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "start"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ClientRequestToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      KinesisVideoStreamSourceTaskConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "KinesisVideoStreamSourceTaskConfiguration"),
      LanguageCode: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_StartVoiceToneAnalysisTaskCommand");
var se_StopSpeakerSearchTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipelines/{Identifier}/speaker-search-tasks/{SpeakerSearchTaskId}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  b.p("SpeakerSearchTaskId", () => input.SpeakerSearchTaskId, "{SpeakerSearchTaskId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "stop"]
  });
  let body;
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_StopSpeakerSearchTaskCommand");
var se_StopVoiceToneAnalysisTaskCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  b.p("VoiceToneAnalysisTaskId", () => input.VoiceToneAnalysisTaskId, "{VoiceToneAnalysisTaskId}", false);
  const query = (0, import_smithy_client.map)({
    [_o]: [, "stop"]
  });
  let body;
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_StopVoiceToneAnalysisTaskCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "tag-resource"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      Tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Tags")
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags");
  const query = (0, import_smithy_client.map)({
    [_o]: [, "untag-resource"]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceARN: [],
      TagKeys: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagKeys")
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-insights-pipeline-configurations/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Elements: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Elements"),
      RealTimeAlertConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "RealTimeAlertConfiguration"),
      ResourceAccessRoleArn: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateMediaInsightsPipelineConfigurationCommand");
var se_UpdateMediaInsightsPipelineStatusCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-insights-pipeline-status/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      UpdateStatus: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateMediaInsightsPipelineStatusCommand");
var se_UpdateMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/media-pipeline-kinesis-video-stream-pools/{Identifier}");
  b.p("Identifier", () => input.Identifier, "{Identifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      StreamConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "StreamConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateMediaPipelineKinesisVideoStreamPoolCommand");
var de_CreateMediaCapturePipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaCapturePipeline: /* @__PURE__ */ __name((_) => de_MediaCapturePipeline(_, context), "MediaCapturePipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaCapturePipelineCommand");
var de_CreateMediaConcatenationPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaConcatenationPipeline: /* @__PURE__ */ __name((_) => de_MediaConcatenationPipeline(_, context), "MediaConcatenationPipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaConcatenationPipelineCommand");
var de_CreateMediaInsightsPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaInsightsPipeline: /* @__PURE__ */ __name((_) => de_MediaInsightsPipeline(_, context), "MediaInsightsPipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaInsightsPipelineCommand");
var de_CreateMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaInsightsPipelineConfiguration: /* @__PURE__ */ __name((_) => de_MediaInsightsPipelineConfiguration(_, context), "MediaInsightsPipelineConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaInsightsPipelineConfigurationCommand");
var de_CreateMediaLiveConnectorPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaLiveConnectorPipeline: /* @__PURE__ */ __name((_) => de_MediaLiveConnectorPipeline(_, context), "MediaLiveConnectorPipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaLiveConnectorPipelineCommand");
var de_CreateMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    KinesisVideoStreamPoolConfiguration: /* @__PURE__ */ __name((_) => de_KinesisVideoStreamPoolConfiguration(_, context), "KinesisVideoStreamPoolConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaPipelineKinesisVideoStreamPoolCommand");
var de_CreateMediaStreamPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaStreamPipeline: /* @__PURE__ */ __name((_) => de_MediaStreamPipeline(_, context), "MediaStreamPipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateMediaStreamPipelineCommand");
var de_DeleteMediaCapturePipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMediaCapturePipelineCommand");
var de_DeleteMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMediaInsightsPipelineConfigurationCommand");
var de_DeleteMediaPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMediaPipelineCommand");
var de_DeleteMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteMediaPipelineKinesisVideoStreamPoolCommand");
var de_GetMediaCapturePipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaCapturePipeline: /* @__PURE__ */ __name((_) => de_MediaCapturePipeline(_, context), "MediaCapturePipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMediaCapturePipelineCommand");
var de_GetMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaInsightsPipelineConfiguration: /* @__PURE__ */ __name((_) => de_MediaInsightsPipelineConfiguration(_, context), "MediaInsightsPipelineConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMediaInsightsPipelineConfigurationCommand");
var de_GetMediaPipelineCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaPipeline: /* @__PURE__ */ __name((_) => de_MediaPipeline(_, context), "MediaPipeline")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMediaPipelineCommand");
var de_GetMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    KinesisVideoStreamPoolConfiguration: /* @__PURE__ */ __name((_) => de_KinesisVideoStreamPoolConfiguration(_, context), "KinesisVideoStreamPoolConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMediaPipelineKinesisVideoStreamPoolCommand");
var de_GetSpeakerSearchTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    SpeakerSearchTask: /* @__PURE__ */ __name((_) => de_SpeakerSearchTask(_, context), "SpeakerSearchTask")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetSpeakerSearchTaskCommand");
var de_GetVoiceToneAnalysisTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VoiceToneAnalysisTask: /* @__PURE__ */ __name((_) => de_VoiceToneAnalysisTask(_, context), "VoiceToneAnalysisTask")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetVoiceToneAnalysisTaskCommand");
var de_ListMediaCapturePipelinesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaCapturePipelines: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListMediaCapturePipelinesCommand");
var de_ListMediaInsightsPipelineConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaInsightsPipelineConfigurations: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListMediaInsightsPipelineConfigurationsCommand");
var de_ListMediaPipelineKinesisVideoStreamPoolsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    KinesisVideoStreamPools: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListMediaPipelineKinesisVideoStreamPoolsCommand");
var de_ListMediaPipelinesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaPipelines: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListMediaPipelinesCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_StartSpeakerSearchTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    SpeakerSearchTask: /* @__PURE__ */ __name((_) => de_SpeakerSearchTask(_, context), "SpeakerSearchTask")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartSpeakerSearchTaskCommand");
var de_StartVoiceToneAnalysisTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    VoiceToneAnalysisTask: /* @__PURE__ */ __name((_) => de_VoiceToneAnalysisTask(_, context), "VoiceToneAnalysisTask")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartVoiceToneAnalysisTaskCommand");
var de_StopSpeakerSearchTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopSpeakerSearchTaskCommand");
var de_StopVoiceToneAnalysisTaskCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopVoiceToneAnalysisTaskCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateMediaInsightsPipelineConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    MediaInsightsPipelineConfiguration: /* @__PURE__ */ __name((_) => de_MediaInsightsPipelineConfiguration(_, context), "MediaInsightsPipelineConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateMediaInsightsPipelineConfigurationCommand");
var de_UpdateMediaInsightsPipelineStatusCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateMediaInsightsPipelineStatusCommand");
var de_UpdateMediaPipelineKinesisVideoStreamPoolCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    KinesisVideoStreamPoolConfiguration: /* @__PURE__ */ __name((_) => de_KinesisVideoStreamPoolConfiguration(_, context), "KinesisVideoStreamPoolConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateMediaPipelineKinesisVideoStreamPoolCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "BadRequestException":
    case "com.amazonaws.chimesdkmediapipelines#BadRequestException":
      throw await de_BadRequestExceptionRes(parsedOutput, context);
    case "ForbiddenException":
    case "com.amazonaws.chimesdkmediapipelines#ForbiddenException":
      throw await de_ForbiddenExceptionRes(parsedOutput, context);
    case "ResourceLimitExceededException":
    case "com.amazonaws.chimesdkmediapipelines#ResourceLimitExceededException":
      throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);
    case "ServiceFailureException":
    case "com.amazonaws.chimesdkmediapipelines#ServiceFailureException":
      throw await de_ServiceFailureExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.chimesdkmediapipelines#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "ThrottledClientException":
    case "com.amazonaws.chimesdkmediapipelines#ThrottledClientException":
      throw await de_ThrottledClientExceptionRes(parsedOutput, context);
    case "UnauthorizedClientException":
    case "com.amazonaws.chimesdkmediapipelines#UnauthorizedClientException":
      throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);
    case "NotFoundException":
    case "com.amazonaws.chimesdkmediapipelines#NotFoundException":
      throw await de_NotFoundExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.chimesdkmediapipelines#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(ChimeSDKMediaPipelinesServiceException);
var de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new BadRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_BadRequestExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ForbiddenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ForbiddenExceptionRes");
var de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new NotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_NotFoundExceptionRes");
var de_ResourceLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceLimitExceededExceptionRes");
var de_ServiceFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceFailureException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceFailureExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottledClientExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottledClientException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottledClientExceptionRes");
var de_UnauthorizedClientExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Code: import_smithy_client.expectString,
    Message: import_smithy_client.expectString,
    RequestId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new UnauthorizedClientException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_UnauthorizedClientExceptionRes");
var se_FragmentSelector = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    FragmentSelectorType: [],
    TimestampRange: /* @__PURE__ */ __name((_) => se_TimestampRange(_, context), "TimestampRange")
  });
}, "se_FragmentSelector");
var se_KinesisVideoStreamRecordingSourceRuntimeConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    FragmentSelector: /* @__PURE__ */ __name((_) => se_FragmentSelector(_, context), "FragmentSelector"),
    Streams: import_smithy_client._json
  });
}, "se_KinesisVideoStreamRecordingSourceRuntimeConfiguration");
var se_TimestampRange = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    EndTimestamp: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "EndTimestamp"),
    StartTimestamp: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "StartTimestamp")
  });
}, "se_TimestampRange");
var de_FragmentSelector = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FragmentSelectorType: import_smithy_client.expectString,
    TimestampRange: /* @__PURE__ */ __name((_) => de_TimestampRange(_, context), "TimestampRange")
  });
}, "de_FragmentSelector");
var de_KinesisVideoStreamPoolConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    PoolArn: import_smithy_client.expectString,
    PoolId: import_smithy_client.expectString,
    PoolName: import_smithy_client.expectString,
    PoolSize: import_smithy_client.expectInt32,
    PoolStatus: import_smithy_client.expectString,
    StreamConfiguration: import_smithy_client._json,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_KinesisVideoStreamPoolConfiguration");
var de_KinesisVideoStreamRecordingSourceRuntimeConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    FragmentSelector: /* @__PURE__ */ __name((_) => de_FragmentSelector(_, context), "FragmentSelector"),
    Streams: import_smithy_client._json
  });
}, "de_KinesisVideoStreamRecordingSourceRuntimeConfiguration");
var de_MediaCapturePipeline = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ChimeSdkMeetingConfiguration: import_smithy_client._json,
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    MediaPipelineArn: import_smithy_client.expectString,
    MediaPipelineId: import_smithy_client.expectString,
    SinkArn: import_smithy_client.expectString,
    SinkIamRoleArn: import_smithy_client.expectString,
    SinkType: import_smithy_client.expectString,
    SourceArn: import_smithy_client.expectString,
    SourceType: import_smithy_client.expectString,
    SseAwsKeyManagementParams: import_smithy_client._json,
    Status: import_smithy_client.expectString,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_MediaCapturePipeline");
var de_MediaConcatenationPipeline = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    MediaPipelineArn: import_smithy_client.expectString,
    MediaPipelineId: import_smithy_client.expectString,
    Sinks: import_smithy_client._json,
    Sources: import_smithy_client._json,
    Status: import_smithy_client.expectString,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_MediaConcatenationPipeline");
var de_MediaInsightsPipeline = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    ElementStatuses: import_smithy_client._json,
    KinesisVideoStreamRecordingSourceRuntimeConfiguration: /* @__PURE__ */ __name((_) => de_KinesisVideoStreamRecordingSourceRuntimeConfiguration(_, context), "KinesisVideoStreamRecordingSourceRuntimeConfiguration"),
    KinesisVideoStreamSourceRuntimeConfiguration: import_smithy_client._json,
    MediaInsightsPipelineConfigurationArn: import_smithy_client.expectString,
    MediaInsightsRuntimeMetadata: import_smithy_client._json,
    MediaPipelineArn: import_smithy_client.expectString,
    MediaPipelineId: import_smithy_client.expectString,
    S3RecordingSinkRuntimeConfiguration: import_smithy_client._json,
    Status: import_smithy_client.expectString
  });
}, "de_MediaInsightsPipeline");
var de_MediaInsightsPipelineConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    Elements: import_smithy_client._json,
    MediaInsightsPipelineConfigurationArn: import_smithy_client.expectString,
    MediaInsightsPipelineConfigurationId: import_smithy_client.expectString,
    MediaInsightsPipelineConfigurationName: import_smithy_client.expectString,
    RealTimeAlertConfiguration: import_smithy_client._json,
    ResourceAccessRoleArn: import_smithy_client.expectString,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_MediaInsightsPipelineConfiguration");
var de_MediaLiveConnectorPipeline = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    MediaPipelineArn: import_smithy_client.expectString,
    MediaPipelineId: import_smithy_client.expectString,
    Sinks: import_smithy_client._json,
    Sources: import_smithy_client._json,
    Status: import_smithy_client.expectString,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_MediaLiveConnectorPipeline");
var de_MediaPipeline = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    MediaCapturePipeline: /* @__PURE__ */ __name((_) => de_MediaCapturePipeline(_, context), "MediaCapturePipeline"),
    MediaConcatenationPipeline: /* @__PURE__ */ __name((_) => de_MediaConcatenationPipeline(_, context), "MediaConcatenationPipeline"),
    MediaInsightsPipeline: /* @__PURE__ */ __name((_) => de_MediaInsightsPipeline(_, context), "MediaInsightsPipeline"),
    MediaLiveConnectorPipeline: /* @__PURE__ */ __name((_) => de_MediaLiveConnectorPipeline(_, context), "MediaLiveConnectorPipeline"),
    MediaStreamPipeline: /* @__PURE__ */ __name((_) => de_MediaStreamPipeline(_, context), "MediaStreamPipeline")
  });
}, "de_MediaPipeline");
var de_MediaStreamPipeline = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    MediaPipelineArn: import_smithy_client.expectString,
    MediaPipelineId: import_smithy_client.expectString,
    Sinks: import_smithy_client._json,
    Sources: import_smithy_client._json,
    Status: import_smithy_client.expectString,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_MediaStreamPipeline");
var de_SpeakerSearchTask = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    SpeakerSearchTaskId: import_smithy_client.expectString,
    SpeakerSearchTaskStatus: import_smithy_client.expectString,
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp")
  });
}, "de_SpeakerSearchTask");
var de_TimestampRange = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    EndTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "EndTimestamp"),
    StartTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "StartTimestamp")
  });
}, "de_TimestampRange");
var de_VoiceToneAnalysisTask = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "CreatedTimestamp"),
    UpdatedTimestamp: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "UpdatedTimestamp"),
    VoiceToneAnalysisTaskId: import_smithy_client.expectString,
    VoiceToneAnalysisTaskStatus: import_smithy_client.expectString
  });
}, "de_VoiceToneAnalysisTask");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _MR = "MaxResults";
var _NT = "NextToken";
var _RARN = "ResourceARN";
var _a = "arn";
var _mr = "max-results";
var _nt = "next-token";
var _o = "operation";

// src/commands/CreateMediaCapturePipelineCommand.ts
var CreateMediaCapturePipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaCapturePipeline", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaCapturePipelineCommand").f(CreateMediaCapturePipelineRequestFilterSensitiveLog, CreateMediaCapturePipelineResponseFilterSensitiveLog).ser(se_CreateMediaCapturePipelineCommand).de(de_CreateMediaCapturePipelineCommand).build() {
  static {
    __name(this, "CreateMediaCapturePipelineCommand");
  }
};

// src/commands/CreateMediaConcatenationPipelineCommand.ts



var CreateMediaConcatenationPipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaConcatenationPipeline", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaConcatenationPipelineCommand").f(
  CreateMediaConcatenationPipelineRequestFilterSensitiveLog,
  CreateMediaConcatenationPipelineResponseFilterSensitiveLog
).ser(se_CreateMediaConcatenationPipelineCommand).de(de_CreateMediaConcatenationPipelineCommand).build() {
  static {
    __name(this, "CreateMediaConcatenationPipelineCommand");
  }
};

// src/commands/CreateMediaInsightsPipelineCommand.ts



var CreateMediaInsightsPipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaInsightsPipeline", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaInsightsPipelineCommand").f(CreateMediaInsightsPipelineRequestFilterSensitiveLog, CreateMediaInsightsPipelineResponseFilterSensitiveLog).ser(se_CreateMediaInsightsPipelineCommand).de(de_CreateMediaInsightsPipelineCommand).build() {
  static {
    __name(this, "CreateMediaInsightsPipelineCommand");
  }
};

// src/commands/CreateMediaInsightsPipelineConfigurationCommand.ts



var CreateMediaInsightsPipelineConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaInsightsPipelineConfiguration", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaInsightsPipelineConfigurationCommand").f(
  CreateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog,
  CreateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog
).ser(se_CreateMediaInsightsPipelineConfigurationCommand).de(de_CreateMediaInsightsPipelineConfigurationCommand).build() {
  static {
    __name(this, "CreateMediaInsightsPipelineConfigurationCommand");
  }
};

// src/commands/CreateMediaLiveConnectorPipelineCommand.ts



var CreateMediaLiveConnectorPipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaLiveConnectorPipeline", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaLiveConnectorPipelineCommand").f(
  CreateMediaLiveConnectorPipelineRequestFilterSensitiveLog,
  CreateMediaLiveConnectorPipelineResponseFilterSensitiveLog
).ser(se_CreateMediaLiveConnectorPipelineCommand).de(de_CreateMediaLiveConnectorPipelineCommand).build() {
  static {
    __name(this, "CreateMediaLiveConnectorPipelineCommand");
  }
};

// src/commands/CreateMediaPipelineKinesisVideoStreamPoolCommand.ts



var CreateMediaPipelineKinesisVideoStreamPoolCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaPipelineKinesisVideoStreamPool", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaPipelineKinesisVideoStreamPoolCommand").f(
  CreateMediaPipelineKinesisVideoStreamPoolRequestFilterSensitiveLog,
  CreateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog
).ser(se_CreateMediaPipelineKinesisVideoStreamPoolCommand).de(de_CreateMediaPipelineKinesisVideoStreamPoolCommand).build() {
  static {
    __name(this, "CreateMediaPipelineKinesisVideoStreamPoolCommand");
  }
};

// src/commands/CreateMediaStreamPipelineCommand.ts



var CreateMediaStreamPipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "CreateMediaStreamPipeline", {}).n("ChimeSDKMediaPipelinesClient", "CreateMediaStreamPipelineCommand").f(CreateMediaStreamPipelineRequestFilterSensitiveLog, CreateMediaStreamPipelineResponseFilterSensitiveLog).ser(se_CreateMediaStreamPipelineCommand).de(de_CreateMediaStreamPipelineCommand).build() {
  static {
    __name(this, "CreateMediaStreamPipelineCommand");
  }
};

// src/commands/DeleteMediaCapturePipelineCommand.ts



var DeleteMediaCapturePipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "DeleteMediaCapturePipeline", {}).n("ChimeSDKMediaPipelinesClient", "DeleteMediaCapturePipelineCommand").f(void 0, void 0).ser(se_DeleteMediaCapturePipelineCommand).de(de_DeleteMediaCapturePipelineCommand).build() {
  static {
    __name(this, "DeleteMediaCapturePipelineCommand");
  }
};

// src/commands/DeleteMediaInsightsPipelineConfigurationCommand.ts



var DeleteMediaInsightsPipelineConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "DeleteMediaInsightsPipelineConfiguration", {}).n("ChimeSDKMediaPipelinesClient", "DeleteMediaInsightsPipelineConfigurationCommand").f(void 0, void 0).ser(se_DeleteMediaInsightsPipelineConfigurationCommand).de(de_DeleteMediaInsightsPipelineConfigurationCommand).build() {
  static {
    __name(this, "DeleteMediaInsightsPipelineConfigurationCommand");
  }
};

// src/commands/DeleteMediaPipelineCommand.ts



var DeleteMediaPipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "DeleteMediaPipeline", {}).n("ChimeSDKMediaPipelinesClient", "DeleteMediaPipelineCommand").f(void 0, void 0).ser(se_DeleteMediaPipelineCommand).de(de_DeleteMediaPipelineCommand).build() {
  static {
    __name(this, "DeleteMediaPipelineCommand");
  }
};

// src/commands/DeleteMediaPipelineKinesisVideoStreamPoolCommand.ts



var DeleteMediaPipelineKinesisVideoStreamPoolCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "DeleteMediaPipelineKinesisVideoStreamPool", {}).n("ChimeSDKMediaPipelinesClient", "DeleteMediaPipelineKinesisVideoStreamPoolCommand").f(void 0, void 0).ser(se_DeleteMediaPipelineKinesisVideoStreamPoolCommand).de(de_DeleteMediaPipelineKinesisVideoStreamPoolCommand).build() {
  static {
    __name(this, "DeleteMediaPipelineKinesisVideoStreamPoolCommand");
  }
};

// src/commands/GetMediaCapturePipelineCommand.ts



var GetMediaCapturePipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "GetMediaCapturePipeline", {}).n("ChimeSDKMediaPipelinesClient", "GetMediaCapturePipelineCommand").f(void 0, GetMediaCapturePipelineResponseFilterSensitiveLog).ser(se_GetMediaCapturePipelineCommand).de(de_GetMediaCapturePipelineCommand).build() {
  static {
    __name(this, "GetMediaCapturePipelineCommand");
  }
};

// src/commands/GetMediaInsightsPipelineConfigurationCommand.ts



var GetMediaInsightsPipelineConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "GetMediaInsightsPipelineConfiguration", {}).n("ChimeSDKMediaPipelinesClient", "GetMediaInsightsPipelineConfigurationCommand").f(void 0, GetMediaInsightsPipelineConfigurationResponseFilterSensitiveLog).ser(se_GetMediaInsightsPipelineConfigurationCommand).de(de_GetMediaInsightsPipelineConfigurationCommand).build() {
  static {
    __name(this, "GetMediaInsightsPipelineConfigurationCommand");
  }
};

// src/commands/GetMediaPipelineCommand.ts



var GetMediaPipelineCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "GetMediaPipeline", {}).n("ChimeSDKMediaPipelinesClient", "GetMediaPipelineCommand").f(void 0, GetMediaPipelineResponseFilterSensitiveLog).ser(se_GetMediaPipelineCommand).de(de_GetMediaPipelineCommand).build() {
  static {
    __name(this, "GetMediaPipelineCommand");
  }
};

// src/commands/GetMediaPipelineKinesisVideoStreamPoolCommand.ts



var GetMediaPipelineKinesisVideoStreamPoolCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "GetMediaPipelineKinesisVideoStreamPool", {}).n("ChimeSDKMediaPipelinesClient", "GetMediaPipelineKinesisVideoStreamPoolCommand").f(void 0, GetMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog).ser(se_GetMediaPipelineKinesisVideoStreamPoolCommand).de(de_GetMediaPipelineKinesisVideoStreamPoolCommand).build() {
  static {
    __name(this, "GetMediaPipelineKinesisVideoStreamPoolCommand");
  }
};

// src/commands/GetSpeakerSearchTaskCommand.ts



var GetSpeakerSearchTaskCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "GetSpeakerSearchTask", {}).n("ChimeSDKMediaPipelinesClient", "GetSpeakerSearchTaskCommand").f(void 0, void 0).ser(se_GetSpeakerSearchTaskCommand).de(de_GetSpeakerSearchTaskCommand).build() {
  static {
    __name(this, "GetSpeakerSearchTaskCommand");
  }
};

// src/commands/GetVoiceToneAnalysisTaskCommand.ts



var GetVoiceToneAnalysisTaskCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "GetVoiceToneAnalysisTask", {}).n("ChimeSDKMediaPipelinesClient", "GetVoiceToneAnalysisTaskCommand").f(void 0, void 0).ser(se_GetVoiceToneAnalysisTaskCommand).de(de_GetVoiceToneAnalysisTaskCommand).build() {
  static {
    __name(this, "GetVoiceToneAnalysisTaskCommand");
  }
};

// src/commands/ListMediaCapturePipelinesCommand.ts



var ListMediaCapturePipelinesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "ListMediaCapturePipelines", {}).n("ChimeSDKMediaPipelinesClient", "ListMediaCapturePipelinesCommand").f(void 0, void 0).ser(se_ListMediaCapturePipelinesCommand).de(de_ListMediaCapturePipelinesCommand).build() {
  static {
    __name(this, "ListMediaCapturePipelinesCommand");
  }
};

// src/commands/ListMediaInsightsPipelineConfigurationsCommand.ts



var ListMediaInsightsPipelineConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "ListMediaInsightsPipelineConfigurations", {}).n("ChimeSDKMediaPipelinesClient", "ListMediaInsightsPipelineConfigurationsCommand").f(void 0, ListMediaInsightsPipelineConfigurationsResponseFilterSensitiveLog).ser(se_ListMediaInsightsPipelineConfigurationsCommand).de(de_ListMediaInsightsPipelineConfigurationsCommand).build() {
  static {
    __name(this, "ListMediaInsightsPipelineConfigurationsCommand");
  }
};

// src/commands/ListMediaPipelineKinesisVideoStreamPoolsCommand.ts



var ListMediaPipelineKinesisVideoStreamPoolsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "ListMediaPipelineKinesisVideoStreamPools", {}).n("ChimeSDKMediaPipelinesClient", "ListMediaPipelineKinesisVideoStreamPoolsCommand").f(void 0, ListMediaPipelineKinesisVideoStreamPoolsResponseFilterSensitiveLog).ser(se_ListMediaPipelineKinesisVideoStreamPoolsCommand).de(de_ListMediaPipelineKinesisVideoStreamPoolsCommand).build() {
  static {
    __name(this, "ListMediaPipelineKinesisVideoStreamPoolsCommand");
  }
};

// src/commands/ListMediaPipelinesCommand.ts



var ListMediaPipelinesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "ListMediaPipelines", {}).n("ChimeSDKMediaPipelinesClient", "ListMediaPipelinesCommand").f(void 0, void 0).ser(se_ListMediaPipelinesCommand).de(de_ListMediaPipelinesCommand).build() {
  static {
    __name(this, "ListMediaPipelinesCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "ListTagsForResource", {}).n("ChimeSDKMediaPipelinesClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/StartSpeakerSearchTaskCommand.ts



var StartSpeakerSearchTaskCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "StartSpeakerSearchTask", {}).n("ChimeSDKMediaPipelinesClient", "StartSpeakerSearchTaskCommand").f(StartSpeakerSearchTaskRequestFilterSensitiveLog, void 0).ser(se_StartSpeakerSearchTaskCommand).de(de_StartSpeakerSearchTaskCommand).build() {
  static {
    __name(this, "StartSpeakerSearchTaskCommand");
  }
};

// src/commands/StartVoiceToneAnalysisTaskCommand.ts



var StartVoiceToneAnalysisTaskCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "StartVoiceToneAnalysisTask", {}).n("ChimeSDKMediaPipelinesClient", "StartVoiceToneAnalysisTaskCommand").f(StartVoiceToneAnalysisTaskRequestFilterSensitiveLog, void 0).ser(se_StartVoiceToneAnalysisTaskCommand).de(de_StartVoiceToneAnalysisTaskCommand).build() {
  static {
    __name(this, "StartVoiceToneAnalysisTaskCommand");
  }
};

// src/commands/StopSpeakerSearchTaskCommand.ts



var StopSpeakerSearchTaskCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "StopSpeakerSearchTask", {}).n("ChimeSDKMediaPipelinesClient", "StopSpeakerSearchTaskCommand").f(void 0, void 0).ser(se_StopSpeakerSearchTaskCommand).de(de_StopSpeakerSearchTaskCommand).build() {
  static {
    __name(this, "StopSpeakerSearchTaskCommand");
  }
};

// src/commands/StopVoiceToneAnalysisTaskCommand.ts



var StopVoiceToneAnalysisTaskCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "StopVoiceToneAnalysisTask", {}).n("ChimeSDKMediaPipelinesClient", "StopVoiceToneAnalysisTaskCommand").f(void 0, void 0).ser(se_StopVoiceToneAnalysisTaskCommand).de(de_StopVoiceToneAnalysisTaskCommand).build() {
  static {
    __name(this, "StopVoiceToneAnalysisTaskCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "TagResource", {}).n("ChimeSDKMediaPipelinesClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "UntagResource", {}).n("ChimeSDKMediaPipelinesClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateMediaInsightsPipelineConfigurationCommand.ts



var UpdateMediaInsightsPipelineConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "UpdateMediaInsightsPipelineConfiguration", {}).n("ChimeSDKMediaPipelinesClient", "UpdateMediaInsightsPipelineConfigurationCommand").f(
  UpdateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog,
  UpdateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog
).ser(se_UpdateMediaInsightsPipelineConfigurationCommand).de(de_UpdateMediaInsightsPipelineConfigurationCommand).build() {
  static {
    __name(this, "UpdateMediaInsightsPipelineConfigurationCommand");
  }
};

// src/commands/UpdateMediaInsightsPipelineStatusCommand.ts



var UpdateMediaInsightsPipelineStatusCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "UpdateMediaInsightsPipelineStatus", {}).n("ChimeSDKMediaPipelinesClient", "UpdateMediaInsightsPipelineStatusCommand").f(void 0, void 0).ser(se_UpdateMediaInsightsPipelineStatusCommand).de(de_UpdateMediaInsightsPipelineStatusCommand).build() {
  static {
    __name(this, "UpdateMediaInsightsPipelineStatusCommand");
  }
};

// src/commands/UpdateMediaPipelineKinesisVideoStreamPoolCommand.ts



var UpdateMediaPipelineKinesisVideoStreamPoolCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ChimeSDKMediaPipelinesService", "UpdateMediaPipelineKinesisVideoStreamPool", {}).n("ChimeSDKMediaPipelinesClient", "UpdateMediaPipelineKinesisVideoStreamPoolCommand").f(void 0, UpdateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog).ser(se_UpdateMediaPipelineKinesisVideoStreamPoolCommand).de(de_UpdateMediaPipelineKinesisVideoStreamPoolCommand).build() {
  static {
    __name(this, "UpdateMediaPipelineKinesisVideoStreamPoolCommand");
  }
};

// src/ChimeSDKMediaPipelines.ts
var commands = {
  CreateMediaCapturePipelineCommand,
  CreateMediaConcatenationPipelineCommand,
  CreateMediaInsightsPipelineCommand,
  CreateMediaInsightsPipelineConfigurationCommand,
  CreateMediaLiveConnectorPipelineCommand,
  CreateMediaPipelineKinesisVideoStreamPoolCommand,
  CreateMediaStreamPipelineCommand,
  DeleteMediaCapturePipelineCommand,
  DeleteMediaInsightsPipelineConfigurationCommand,
  DeleteMediaPipelineCommand,
  DeleteMediaPipelineKinesisVideoStreamPoolCommand,
  GetMediaCapturePipelineCommand,
  GetMediaInsightsPipelineConfigurationCommand,
  GetMediaPipelineCommand,
  GetMediaPipelineKinesisVideoStreamPoolCommand,
  GetSpeakerSearchTaskCommand,
  GetVoiceToneAnalysisTaskCommand,
  ListMediaCapturePipelinesCommand,
  ListMediaInsightsPipelineConfigurationsCommand,
  ListMediaPipelineKinesisVideoStreamPoolsCommand,
  ListMediaPipelinesCommand,
  ListTagsForResourceCommand,
  StartSpeakerSearchTaskCommand,
  StartVoiceToneAnalysisTaskCommand,
  StopSpeakerSearchTaskCommand,
  StopVoiceToneAnalysisTaskCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateMediaInsightsPipelineConfigurationCommand,
  UpdateMediaInsightsPipelineStatusCommand,
  UpdateMediaPipelineKinesisVideoStreamPoolCommand
};
var ChimeSDKMediaPipelines = class extends ChimeSDKMediaPipelinesClient {
  static {
    __name(this, "ChimeSDKMediaPipelines");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, ChimeSDKMediaPipelines);

// src/pagination/ListMediaCapturePipelinesPaginator.ts

var paginateListMediaCapturePipelines = (0, import_core.createPaginator)(ChimeSDKMediaPipelinesClient, ListMediaCapturePipelinesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListMediaInsightsPipelineConfigurationsPaginator.ts

var paginateListMediaInsightsPipelineConfigurations = (0, import_core.createPaginator)(ChimeSDKMediaPipelinesClient, ListMediaInsightsPipelineConfigurationsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListMediaPipelineKinesisVideoStreamPoolsPaginator.ts

var paginateListMediaPipelineKinesisVideoStreamPools = (0, import_core.createPaginator)(
  ChimeSDKMediaPipelinesClient,
  ListMediaPipelineKinesisVideoStreamPoolsCommand,
  "NextToken",
  "NextToken",
  "MaxResults"
);

// src/pagination/ListMediaPipelinesPaginator.ts

var paginateListMediaPipelines = (0, import_core.createPaginator)(ChimeSDKMediaPipelinesClient, ListMediaPipelinesCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  ChimeSDKMediaPipelinesServiceException,
  __Client,
  ChimeSDKMediaPipelinesClient,
  ChimeSDKMediaPipelines,
  $Command,
  CreateMediaCapturePipelineCommand,
  CreateMediaConcatenationPipelineCommand,
  CreateMediaInsightsPipelineCommand,
  CreateMediaInsightsPipelineConfigurationCommand,
  CreateMediaLiveConnectorPipelineCommand,
  CreateMediaPipelineKinesisVideoStreamPoolCommand,
  CreateMediaStreamPipelineCommand,
  DeleteMediaCapturePipelineCommand,
  DeleteMediaInsightsPipelineConfigurationCommand,
  DeleteMediaPipelineCommand,
  DeleteMediaPipelineKinesisVideoStreamPoolCommand,
  GetMediaCapturePipelineCommand,
  GetMediaInsightsPipelineConfigurationCommand,
  GetMediaPipelineCommand,
  GetMediaPipelineKinesisVideoStreamPoolCommand,
  GetSpeakerSearchTaskCommand,
  GetVoiceToneAnalysisTaskCommand,
  ListMediaCapturePipelinesCommand,
  ListMediaInsightsPipelineConfigurationsCommand,
  ListMediaPipelineKinesisVideoStreamPoolsCommand,
  ListMediaPipelinesCommand,
  ListTagsForResourceCommand,
  StartSpeakerSearchTaskCommand,
  StartVoiceToneAnalysisTaskCommand,
  StopSpeakerSearchTaskCommand,
  StopVoiceToneAnalysisTaskCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateMediaInsightsPipelineConfigurationCommand,
  UpdateMediaInsightsPipelineStatusCommand,
  UpdateMediaPipelineKinesisVideoStreamPoolCommand,
  paginateListMediaCapturePipelines,
  paginateListMediaInsightsPipelineConfigurations,
  paginateListMediaPipelineKinesisVideoStreamPools,
  paginateListMediaPipelines,
  ActiveSpeakerPosition,
  ContentType,
  CallAnalyticsLanguageCode,
  PartialResultsStability,
  ContentRedactionOutput,
  VocabularyFilterMethod,
  AudioArtifactsConcatenationState,
  ArtifactsConcatenationState,
  AudioMuxType,
  CanvasOrientation,
  ContentShareLayoutOption,
  TileOrder,
  HorizontalTilePosition,
  PresenterPosition,
  VerticalTilePosition,
  BorderColor,
  HighlightColor,
  LayoutOption,
  ResolutionOption,
  ContentMuxType,
  ArtifactsState,
  VideoMuxType,
  AudioChannelsOption,
  ErrorCode,
  BadRequestException,
  ParticipantRole,
  MediaPipelineSinkType,
  MediaPipelineSourceType,
  MediaPipelineStatus,
  ForbiddenException,
  ResourceLimitExceededException,
  ServiceFailureException,
  ServiceUnavailableException,
  ThrottledClientException,
  UnauthorizedClientException,
  ConcatenationSinkType,
  ConcatenationSourceType,
  FragmentSelectorType,
  MediaEncoding,
  RecordingFileFormat,
  MediaPipelineElementStatus,
  MediaInsightsPipelineConfigurationElementType,
  NotFoundException,
  VoiceAnalyticsConfigurationStatus,
  SentimentType,
  RealTimeAlertRuleType,
  LiveConnectorSinkType,
  LiveConnectorMuxType,
  LiveConnectorSourceType,
  ConflictException,
  KinesisVideoStreamPoolStatus,
  MediaStreamType,
  MediaStreamPipelineSinkType,
  MediaPipelineTaskStatus,
  VoiceAnalyticsLanguageCode,
  MediaPipelineStatusUpdate,
  SelectedVideoStreamsFilterSensitiveLog,
  SourceConfigurationFilterSensitiveLog,
  ChimeSdkMeetingConfigurationFilterSensitiveLog,
  CreateMediaCapturePipelineRequestFilterSensitiveLog,
  MediaCapturePipelineFilterSensitiveLog,
  CreateMediaCapturePipelineResponseFilterSensitiveLog,
  S3BucketSinkConfigurationFilterSensitiveLog,
  ConcatenationSinkFilterSensitiveLog,
  MediaCapturePipelineSourceConfigurationFilterSensitiveLog,
  ConcatenationSourceFilterSensitiveLog,
  CreateMediaConcatenationPipelineRequestFilterSensitiveLog,
  MediaConcatenationPipelineFilterSensitiveLog,
  CreateMediaConcatenationPipelineResponseFilterSensitiveLog,
  S3RecordingSinkRuntimeConfigurationFilterSensitiveLog,
  CreateMediaInsightsPipelineRequestFilterSensitiveLog,
  MediaInsightsPipelineFilterSensitiveLog,
  CreateMediaInsightsPipelineResponseFilterSensitiveLog,
  KinesisDataStreamSinkConfigurationFilterSensitiveLog,
  LambdaFunctionSinkConfigurationFilterSensitiveLog,
  S3RecordingSinkConfigurationFilterSensitiveLog,
  SnsTopicSinkConfigurationFilterSensitiveLog,
  SqsQueueSinkConfigurationFilterSensitiveLog,
  MediaInsightsPipelineConfigurationElementFilterSensitiveLog,
  CreateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog,
  MediaInsightsPipelineConfigurationFilterSensitiveLog,
  CreateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog,
  LiveConnectorRTMPConfigurationFilterSensitiveLog,
  LiveConnectorSinkConfigurationFilterSensitiveLog,
  ChimeSdkMeetingLiveConnectorConfigurationFilterSensitiveLog,
  LiveConnectorSourceConfigurationFilterSensitiveLog,
  CreateMediaLiveConnectorPipelineRequestFilterSensitiveLog,
  MediaLiveConnectorPipelineFilterSensitiveLog,
  CreateMediaLiveConnectorPipelineResponseFilterSensitiveLog,
  CreateMediaPipelineKinesisVideoStreamPoolRequestFilterSensitiveLog,
  KinesisVideoStreamPoolConfigurationFilterSensitiveLog,
  CreateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog,
  MediaStreamSinkFilterSensitiveLog,
  MediaStreamSourceFilterSensitiveLog,
  CreateMediaStreamPipelineRequestFilterSensitiveLog,
  MediaStreamPipelineFilterSensitiveLog,
  CreateMediaStreamPipelineResponseFilterSensitiveLog,
  GetMediaCapturePipelineResponseFilterSensitiveLog,
  GetMediaInsightsPipelineConfigurationResponseFilterSensitiveLog,
  MediaPipelineFilterSensitiveLog,
  GetMediaPipelineResponseFilterSensitiveLog,
  GetMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog,
  MediaInsightsPipelineConfigurationSummaryFilterSensitiveLog,
  ListMediaInsightsPipelineConfigurationsResponseFilterSensitiveLog,
  KinesisVideoStreamPoolSummaryFilterSensitiveLog,
  ListMediaPipelineKinesisVideoStreamPoolsResponseFilterSensitiveLog,
  StartSpeakerSearchTaskRequestFilterSensitiveLog,
  StartVoiceToneAnalysisTaskRequestFilterSensitiveLog,
  UpdateMediaInsightsPipelineConfigurationRequestFilterSensitiveLog,
  UpdateMediaInsightsPipelineConfigurationResponseFilterSensitiveLog,
  UpdateMediaPipelineKinesisVideoStreamPoolResponseFilterSensitiveLog
});

