import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  ChimeSDKMediaPipelinesClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMediaPipelinesClient";
import {
  CreateMediaInsightsPipelineConfigurationRequest,
  CreateMediaInsightsPipelineConfigurationResponse,
} from "../models/models_0";
export { __MetadataBearer };
export { $Command };
export interface CreateMediaInsightsPipelineConfigurationCommandInput
  extends CreateMediaInsightsPipelineConfigurationRequest {}
export interface CreateMediaInsightsPipelineConfigurationCommandOutput
  extends CreateMediaInsightsPipelineConfigurationResponse,
    __MetadataBearer {}
declare const CreateMediaInsightsPipelineConfigurationCommand_base: {
  new (
    input: CreateMediaInsightsPipelineConfigurationCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    CreateMediaInsightsPipelineConfigurationCommandInput,
    CreateMediaInsightsPipelineConfigurationCommandOutput,
    ChimeSDKMediaPipelinesClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    input: CreateMediaInsightsPipelineConfigurationCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    CreateMediaInsightsPipelineConfigurationCommandInput,
    CreateMediaInsightsPipelineConfigurationCommandOutput,
    ChimeSDKMediaPipelinesClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class CreateMediaInsightsPipelineConfigurationCommand extends CreateMediaInsightsPipelineConfigurationCommand_base {
  protected static __types: {
    api: {
      input: CreateMediaInsightsPipelineConfigurationRequest;
      output: CreateMediaInsightsPipelineConfigurationResponse;
    };
    sdk: {
      input: CreateMediaInsightsPipelineConfigurationCommandInput;
      output: CreateMediaInsightsPipelineConfigurationCommandOutput;
    };
  };
}
