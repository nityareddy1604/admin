import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  ChimeSDKMediaPipelinesClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMediaPipelinesClient";
import {
  ListMediaInsightsPipelineConfigurationsRequest,
  ListMediaInsightsPipelineConfigurationsResponse,
} from "../models/models_0";
export { __MetadataBearer };
export { $Command };
export interface ListMediaInsightsPipelineConfigurationsCommandInput
  extends ListMediaInsightsPipelineConfigurationsRequest {}
export interface ListMediaInsightsPipelineConfigurationsCommandOutput
  extends ListMediaInsightsPipelineConfigurationsResponse,
    __MetadataBearer {}
declare const ListMediaInsightsPipelineConfigurationsCommand_base: {
  new (
    input: ListMediaInsightsPipelineConfigurationsCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    ListMediaInsightsPipelineConfigurationsCommandInput,
    ListMediaInsightsPipelineConfigurationsCommandOutput,
    ChimeSDKMediaPipelinesClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    ...[input]: [] | [ListMediaInsightsPipelineConfigurationsCommandInput]
  ): import("@smithy/smithy-client").CommandImpl<
    ListMediaInsightsPipelineConfigurationsCommandInput,
    ListMediaInsightsPipelineConfigurationsCommandOutput,
    ChimeSDKMediaPipelinesClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class ListMediaInsightsPipelineConfigurationsCommand extends ListMediaInsightsPipelineConfigurationsCommand_base {
  protected static __types: {
    api: {
      input: ListMediaInsightsPipelineConfigurationsRequest;
      output: ListMediaInsightsPipelineConfigurationsResponse;
    };
    sdk: {
      input: ListMediaInsightsPipelineConfigurationsCommandInput;
      output: ListMediaInsightsPipelineConfigurationsCommandOutput;
    };
  };
}
